@page "/products"
@inject ApplicationDbContext Context
@attribute [StreamRendering(true)]

<h1>Produtos</h1>

<a href="/products/create" class="btn btn-primary">Novo Produto</a>
<br>

@if (Products.Count() >= 0)  @*Categories.Count()<=0, mas visual sugeriu !Categories.Any()*@
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Nome</th>
            <th>Categoria</th>
            <th>Preço</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var product in Products)
        {
            <tr>
                <td>@product.Id</td>
                <td>
                    <a href="/products/@product.Id">
                        @product.Title
                    </a>
                </td>
                <td>@product.Category.Title</td>
                <td>@product.Price.ToString("C", new CultureInfo("pt-PT"))</td>
                <td>
                    <a href="/products/edit/@product.Id" class="btn btn-primary">
                        Editar
                    </a>
                    &nbsp;&nbsp; @* espaços em branco*@
                    <a href="/products/delete/@product.Id" class="btn btn-danger">
                        Excluir
                    </a>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <p class="text-center">
        <em>
            A carregar os produtos...
        </em>
    </p>
}

@code {
    public IEnumerable<Product> Products { get; set; } = Enumerable.Empty<Product>();

    protected override async Task OnInitializedAsync()
    {
        //await Task.Delay(5000);

        Products = await Context
            .Products
            .AsNoTracking()
            .Include(x=> x.Category)
            .ToListAsync();
        //.Include necessário para indicar o título da categoria - product.Category.Title
        //vai fazer um join. Se não for necessário o título da categoria não fazer o include.
    }

}

